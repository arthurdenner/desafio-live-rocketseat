// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`app component should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": <div
        style={
                Object {
                        "padding": "1em",
                      }
        }
>
        <h1>
                Desafio Live Rocket Seat
        </h1>
        <Connect(Todos) />
</div>,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Desafio Live Rocket Seat
</h1>,
          <Connect(Todos) />,
        ],
        "style": Object {
          "padding": "1em",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Desafio Live Rocket Seat",
          },
          "ref": null,
          "rendered": "Desafio Live Rocket Seat",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": <div
          style={
                    Object {
                              "padding": "1em",
                            }
          }
>
          <h1>
                    Desafio Live Rocket Seat
          </h1>
          <Connect(Todos) />
</div>,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              Desafio Live Rocket Seat
</h1>,
            <Connect(Todos) />,
          ],
          "style": Object {
            "padding": "1em",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Desafio Live Rocket Seat",
            },
            "ref": null,
            "rendered": "Desafio Live Rocket Seat",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
